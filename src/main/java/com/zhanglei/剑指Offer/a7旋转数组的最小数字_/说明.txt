https://www.cnblogs.com/edisonchou/p/4746561.html

把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。
输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。

例如输入：数组{3,4,5,1,2}【注是{1,2,3,4,5}的一个旋转】
    输出：该数组的最小值为1。
 NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。

 思路：

    Step1.和二分查找法一样，我们用两个指针分别指向数组的第一个元素和最后一个元素。

 　　Step2.接着我们可以找到数组中间的元素：

 　　如果该中间元素位于前面的递增子数组，那么它应该大于或者等于第一个指针指向的元素。
     此时数组中最小的元素应该位于该中间元素的后面。我们可以把第一个指针指向该中间元素，这样可以缩小寻找的范围。
     移动之后的第一个指针仍然位于前面的递增子数组之中。如果中间元素位于后面的递增子数组，
     那么它应该小于或者等于第二个指针指向的元素。此时该数组中最小的元素应该位于该中间元素的前面。

 　　Step3.接下来我们再用更新之后的两个指针，重复做新一轮的查找。

     按照上述的思路，第一个指针总是指向前面递增数组的元素，而第二个指针总是指向后面递增数组的元素。
     最终第一个指针将指向前面子数组的最后一个元素，而第二个指针会指向后面子数组的第一个元素。
     也就是它们最终会指向两个相邻的元素，而第二个指针指向的刚好是最小的元素。这就是循环结束的条件。